#!/usr/bin/php
<?

include("ganon-read-only/ganon.php");
$manual = 'php_manual_en.html';

if(!file_exists($manual)) {
  if(!file_exists("$manual.gz")) {
    system("wget -O $manual.gz http://us1.php.net/get/php_manual_en.html.gz/from/this/mirror");
  }
  system("gunzip $manual.gz");
}
system("grep -B 2 -A 2 methodparam $manual | grep -v '^--$' > $manual.compact");

$cacheFile =  './.full-table';
$lookupFile = "./.lookup-table";

if(file_exists($cacheFile)) {
  $cache = unserialize(file_get_contents($cacheFile));
} else {
  $cache = Array();
}

if(!file_exists($lookupFile)) {
  echo "Lookup table not found. Building (this file is quite large)\n";
  $html = file_get_dom("$manual.compact");

  $table = Array();

  foreach($html('.methodsynopsis') as $element) {
    echo $element->getPlainText();
    //$table[$element->getPlainText()] = $element->href;
  }

  //file_put_contents($lookupFile, serialize($table));
}
exit(0);

$ref = unserialize(file_get_contents($lookupFile));

$total = count($ref);
$current = 0; 

foreach($ref as $name => $href) {
  $current++;

  if($current < 4750 || array_key_exists($name, $cache)) {
    continue;
  }
  printf("%4d / %d %s\n", $current, $total, $name);

  $html = file_get_dom("http://www.php.net/" . $href);

  $obj = $html('.methodsynopsis');

  if(count($obj) > 0) {
    $value = trim($obj[0]->getPlainText());
    $value = str_replace('( ', '(', $value);
    $value = str_replace(' )', ')', $value);
    $value = preg_replace('/ ,/', ',', $value);
    $cache[$name] = $value;
  }

  file_put_contents($cacheFile, serialize($cache));
}
